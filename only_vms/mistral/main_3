terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}

terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
}

resource "yandex_vpc_network" "network" {
  name = "common-network"
}

resource "yandex_vpc_subnet" "subnet" {
  name           = "common-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}

resource "yandex_compute_instance" "crm_server" {
  name        = "crm-server"
  platform_id = "standard-v2"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd827b7g7l6q5v8j97e4" # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

resource "yandex_compute_instance" "ecommerce" {
  name        = "ecommerce"
  platform_id = "standard-v2"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd827b7g7l6q5v8j97e4" # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

resource "yandex_vpc_security_group" "security_group" {
  name        = "basic-security-group"
  description = "Basic security group for SSH access"
  network_id  = yandex_vpc_network.network.id

  ingress {
    protocol       = "TCP"
    description     = "SSH access"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 22
  }
}

output "crm_server_public_ip" {
  value = yandex_compute_instance.crm_server.network_interface[0].nat_ip_address
}

output "ecommerce_public_ip" {
  value = yandex_compute_instance.ecommerce.network_interface[0].nat_ip_address
}

