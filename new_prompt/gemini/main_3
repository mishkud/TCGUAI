terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}

# ===================================================================
# Yandex Cloud Network
# ===================================================================

resource "yandex_vpc_network" "iac_network" {
  name = "iac-main-network"
}

resource "yandex_vpc_subnet" "iac_subnet" {
  name           = "iac-main-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.iac_network.id
  v4_cidr_blocks = ["10.10.1.0/24"]
}

# ===================================================================
# Security Groups
# ===================================================================

resource "yandex_vpc_security_group" "vms_sg" {
  name       = "vms-security-group"
  network_id = yandex_vpc_network.iac_network.id

  # Разрешаем весь исходящий трафик для ВМ
  egress {
    protocol       = "ANY"
    description    = "Allow all outgoing traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
    from_port      = 0
    to_port        = 65535
  }

  # Разрешаем входящий SSH-трафик
  ingress {
    protocol       = "TCP"
    description    = "Allow SSH access from any IP"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 22
  }
}

resource "yandex_vpc_security_group" "mysql_sg" {
  name       = "mysql-security-group"
  network_id = yandex_vpc_network.iac_network.id

  # Разрешаем входящий трафик на порт MySQL только от ВМ
  ingress {
    protocol          = "TCP"
    description       = "Allow MySQL access from internal VMs"
    security_group_id = yandex_vpc_security_group.vms_sg.id
    port              = 3306
  }
}

# ===================================================================
# Data Sources for VM Images
# ===================================================================

data "yandex_compute_image" "ubuntu_2204" {
  family = "ubuntu-2204-lts"
}

# ===================================================================
# Virtual Machines
# ===================================================================

resource "yandex_compute_instance" "crm_server" {
  name        = "crm-server"
  platform_id = "standard-v3"
  zone        = yandex_vpc_subnet.iac_subnet.zone

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu_2204.id
      type     = "network-hdd"
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.iac_subnet.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.vms_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

resource "yandex_compute_instance" "online_store" {
  name        = "online-store"
  platform_id = "standard-v3"
  zone        = yandex_vpc_subnet.iac_subnet.zone

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu_2204.id
      type     = "network-hdd"
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.iac_subnet.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.vms_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

# ===================================================================
# Managed Service for MySQL
# ===================================================================

resource "yandex_mdb_mysql_cluster" "main_db_cluster" {
  name                = "main-db-cluster"
  environment         = "PRODUCTION"
  network_id          = yandex_vpc_network.iac_network.id
  version             = "8.0"
  security_group_ids  = [yandex_vpc_security_group.mysql_sg.id]
  deletion_protection = false # Установить в 'true' для продакшена

  # ВНИМАНИЕ: Пароль указан в открытом виде.
  # Для продакшена используйте переменные или Yandex Lockbox.
  user {
    name     = "db_admin"
    password = "ChangeMePlease123!"
    permission {
      database_name = "app_db"
      roles         = ["ALL_PRIVILEGES"]
    }
  }

  database {
    name = "app_db"
  }

  resources {
    resource_preset_id = "s3.small" # 2 vCPU, 8 GB RAM
    disk_type_id       = "network-ssd"
    disk_size          = 20
  }

  host {
    zone      = yandex_vpc_subnet.iac_subnet.zone
    subnet_id = yandex_vpc_subnet.iac_subnet.id
    name      = "mysql-main-host"
  }

  maintenance_window {
    type = "ANYTIME"
  }
}

# ===================================================================
# Outputs
# ===================================================================

output "crm_server_public_ip" {
  description = "Public IP address of the CRM server"
  value       = yandex_compute_instance.crm_server.network_interface.0.nat_ip_address
}

output "online_store_public_ip" {
  description = "Public IP address of the Online Store server"
  value       = yandex_compute_instance.online_store.network_interface.0.nat_ip_address
}

output "mysql_cluster_fqdn" {
  description = "FQDN of the main MySQL host"
  value       = yandex_mdb_mysql_cluster.main_db_cluster.host.0.fqdn
}
