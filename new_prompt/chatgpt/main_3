terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}

# -------------------------------
# Network
# -------------------------------
resource "yandex_vpc_network" "main" {
  name = "main-network"
}

resource "yandex_vpc_subnet" "main" {
  name           = "main-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.main.id
  v4_cidr_blocks = ["10.0.0.0/24"]
}

# -------------------------------
# SSH Key
# -------------------------------
data "local_file" "ssh_key" {
  filename = pathexpand("~/.ssh/id_rsa.pub")
}

# -------------------------------
# Security Group
# -------------------------------
resource "yandex_vpc_security_group" "vm_sg" {
  name       = "vm-sec-group"
  network_id = yandex_vpc_network.main.id

  ingress {
    protocol       = "TCP"
    description    = "SSH access"
    port           = 22
    v4_cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    protocol       = "ANY"
    description    = "Allow all outgoing traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "yandex_vpc_security_group" "mysql_sg" {
  name       = "mysql-sec-group"
  network_id = yandex_vpc_network.main.id

  ingress {
    protocol          = "TCP"
    description       = "Allow MySQL from VMs"
    port              = 3306
    security_group_id = yandex_vpc_security_group.vm_sg.id
  }

  egress {
    protocol       = "ANY"
    description    = "Allow all outgoing traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

# -------------------------------
# Virtual Machines
# -------------------------------
resource "yandex_compute_instance" "crm" {
  name        = "crm-vm"
  platform_id = "standard-v1"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8lclhhs5rnbls6fjit" # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id      = yandex_vpc_subnet.main.id
    nat            = true
    security_group_ids = [yandex_vpc_security_group.vm_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${data.local_file.ssh_key.content}"
  }
}

resource "yandex_compute_instance" "shop" {
  name        = "shop-vm"
  platform_id = "standard-v1"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8lclhhs5rnbls6fjit" # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id      = yandex_vpc_subnet.main.id
    nat            = true
    security_group_ids = [yandex_vpc_security_group.vm_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${data.local_file.ssh_key.content}"
  }
}

# -------------------------------
# Managed MySQL
# -------------------------------
resource "yandex_mdb_mysql_cluster" "mysql" {
  name        = "mysql-cluster"
  environment = "PRODUCTION"
  network_id  = yandex_vpc_network.main.id
  version     = "8.0"

  resources {
    resource_preset_id = "s2.medium" # 2 cores, 8GB RAM
    disk_type_id       = "network-ssd"
    disk_size          = 20
  }

  host {
    zone      = "ru-central1-a"
    subnet_id = yandex_vpc_subnet.main.id
  }

  security_group_ids = [yandex_vpc_security_group.mysql_sg.id]

  database {
    name = "appdb"
  }

  user {
    name     = "appuser"
    password = "secureP@ssw0rd"
    permission {
      database_name = "appdb"
    }
  }
}

# -------------------------------
# Outputs
# -------------------------------
output "crm_public_ip" {
  value = yandex_compute_instance.crm.network_interface[0].nat_ip_address
}

output "shop_public_ip" {
  value = yandex_compute_instance.shop.network_interface[0].nat_ip_address
}

