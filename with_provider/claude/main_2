terraform {
  required_providers {
    yandex = {
      source  = "yandex-cloud/yandex"
      version = ">= 0.84.0"
    }
  }
}

# Провайдер Yandex Cloud
provider "yandex" {
  # Эти параметры необходимо заменить на ваши значения
  token     = var.yc_token
  cloud_id  = var.yc_cloud_id
  folder_id = var.yc_folder_id
  zone      = var.yc_zone
}

# Определение переменных
variable "yc_token" {
  description = "Yandex Cloud API токен"
  type        = string
  sensitive   = true
}

variable "yc_cloud_id" {
  description = "Идентификатор облака Yandex Cloud"
  type        = string
}

variable "yc_folder_id" {
  description = "Идентификатор каталога в Yandex Cloud"
  type        = string
}

variable "yc_zone" {
  description = "Зона доступности"
  type        = string
  default     = "ru-central1-a"
}

variable "crm_vm_name" {
  description = "Имя ВМ для CRM"
  type        = string
  default     = "crm-server"
}

variable "shop_vm_name" {
  description = "Имя ВМ для интернет-магазина"
  type        = string
  default     = "shop-server"
}

variable "mysql_db_name" {
  description = "Имя базы данных MySQL"
  type        = string
  default     = "project-db"
}

variable "mysql_user" {
  description = "Имя пользователя для MySQL"
  type        = string
  default     = "dbuser"
}

variable "mysql_password" {
  description = "Пароль для пользователя MySQL"
  type        = string
  sensitive   = true
}

# Создание VPC сети
resource "yandex_vpc_network" "network" {
  name = "project-network"
}

# Создание подсети
resource "yandex_vpc_subnet" "subnet" {
  name           = "project-subnet"
  zone           = var.yc_zone
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["10.2.0.0/16"]
}

# Создание группы безопасности для ВМ
resource "yandex_vpc_security_group" "vm_sg" {
  name        = "vm-security-group"
  description = "Security group for virtual machines"
  network_id  = yandex_vpc_network.network.id

  # Разрешаем входящий SSH
  ingress {
    protocol       = "TCP"
    description    = "SSH access"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 22
  }
  
  # Разрешаем входящие HTTP для веб-серверов
  ingress {
    protocol       = "TCP"
    description    = "HTTP access"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 80
  }
  
  # Разрешаем входящие HTTPS для веб-серверов
  ingress {
    protocol       = "TCP"
    description    = "HTTPS access"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 443
  }

  # Разрешаем весь исходящий трафик
  egress {
    protocol       = "ANY"
    description    = "Allow all outgoing traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
    from_port      = 0
    to_port        = 65535
  }
}

# Создание группы безопасности для MySQL
resource "yandex_vpc_security_group" "mysql_sg" {
  name        = "mysql-security-group"
  description = "Security group for MySQL"
  network_id  = yandex_vpc_network.network.id

  # Разрешаем доступ к MySQL только из нашей подсети
  ingress {
    protocol       = "TCP"
    description    = "MySQL access from subnet"
    v4_cidr_blocks = [yandex_vpc_subnet.subnet.v4_cidr_blocks[0]]
    port           = 3306
  }

  # Разрешаем весь исходящий трафик
  egress {
    protocol       = "ANY"
    description    = "Allow all outgoing traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
    from_port      = 0
    to_port        = 65535
  }
}

# Создание ВМ для CRM
resource "yandex_compute_instance" "crm_vm" {
  name        = var.crm_vm_name
  platform_id = "standard-v1"
  zone        = var.yc_zone

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = "fd8snjpoq85qqv0mk9gi" # Ubuntu 22.04 LTS
      size     = 15
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.subnet.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.vm_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

# Создание ВМ для интернет-магазина
resource "yandex_compute_instance" "shop_vm" {
  name        = var.shop_vm_name
  platform_id = "standard-v1"
  zone        = var.yc_zone

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = "fd8snjpoq85qqv0mk9gi" # Ubuntu 22.04 LTS
      size     = 15
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.subnet.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.vm_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

# Создание кластера MySQL
resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name                = var.mysql_db_name
  environment         = "PRODUCTION"
  network_id          = yandex_vpc_network.network.id
  version             = "8.0"
  security_group_ids  = [yandex_vpc_security_group.mysql_sg.id]
  deletion_protection = false

  resources {
    resource_preset_id = "b1.medium" # 2 vCPU, 8 GB RAM
    disk_type_id       = "network-ssd"
    disk_size          = 20
  }

  host {
    zone      = var.yc_zone
    subnet_id = yandex_vpc_subnet.subnet.id
  }
}

# Создание базы данных
resource "yandex_mdb_mysql_database" "database" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "default_db"
}

# Создание пользователя MySQL
resource "yandex_mdb_mysql_user" "user" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = var.mysql_user
  password   = var.mysql_password
  
  permission {
    database_name = yandex_mdb_mysql_database.database.name
    roles         = ["ALL"]
  }
}

# Вывод информации о созданных ресурсах
output "crm_vm_public_ip" {
  value = yandex_compute_instance.crm_vm.network_interface[0].nat_ip_address
  description = "Публичный IP-адрес ВМ для CRM"
}

output "shop_vm_public_ip" {
  value = yandex_compute_instance.shop_vm.network_interface[0].nat_ip_address
  description = "Публичный IP-адрес ВМ для интернет-магазина"
}

output "mysql_fqdn" {
  value = yandex_mdb_mysql_cluster.mysql_cluster.host[0].fqdn
  description = "FQDN для подключения к MySQL"
}

output "mysql_connection_info" {
  value = "mysql -u ${var.mysql_user} -h ${yandex_mdb_mysql_cluster.mysql_cluster.host[0].fqdn} -p"
  description = "Команда для подключения к MySQL"
  sensitive = false
}
