terraform {
  required_providers {
    yandex = {
      source  = "yandex-cloud/yandex"
      version = "~> 0.100.0"
    }
  }
}

# Переменные, которые нужно задать
variable "yc_token" {
  description = "Yandex Cloud API токен"
  type        = string
  sensitive   = true
}

variable "yc_cloud_id" {
  description = "ID облака в Yandex Cloud"
  type        = string
}

variable "yc_folder_id" {
  description = "ID каталога в Yandex Cloud"
  type        = string
}

variable "yc_zone" {
  description = "Зона доступности"
  type        = string
  default     = "ru-central1-a"
}

variable "vm_username" {
  description = "Имя пользователя для SSH подключения"
  type        = string
  default     = "admin"
}

variable "ssh_public_key" {
  description = "Публичный SSH ключ для доступа к ВМ"
  type        = string
}

variable "mysql_password" {
  description = "Пароль для MySQL пользователя"
  type        = string
  sensitive   = true
}

# Настройка провайдера Yandex Cloud
provider "yandex" {
  token     = var.yc_token
  cloud_id  = var.yc_cloud_id
  folder_id = var.yc_folder_id
  zone      = var.yc_zone
}

# Создание сети
resource "yandex_vpc_network" "network" {
  name = "network"
}

# Создание подсети
resource "yandex_vpc_subnet" "subnet" {
  name           = "subnet"
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["192.168.1.0/24"]
  zone           = var.yc_zone
}

# Создание ВМ для CRM
resource "yandex_compute_instance" "crm" {
  name        = "crm-server"
  platform_id = "standard-v1"
  zone        = var.yc_zone

  resources {
    cores  = 2
    memory = 4
    core_fraction = 100
  }

  boot_disk {
    initialize_params {
      image_id = "fd8qps171vp141hl7g9l" # Ubuntu 22.04 LTS
      size     = 20
      type     = "network-hdd"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${var.vm_username}:${var.ssh_public_key}"
  }
}

# Создание ВМ для интернет-магазина
resource "yandex_compute_instance" "ecommerce" {
  name        = "ecommerce-server"
  platform_id = "standard-v1"
  zone        = var.yc_zone

  resources {
    cores  = 2
    memory = 4
    core_fraction = 100
  }

  boot_disk {
    initialize_params {
      image_id = "fd8qps171vp141hl7g9l" # Ubuntu 22.04 LTS
      size     = 20
      type     = "network-hdd"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${var.vm_username}:${var.ssh_public_key}"
  }
}

# Создание группы безопасности для базы данных
resource "yandex_vpc_security_group" "mysql_sg" {
  name        = "mysql-sg"
  description = "Security group for MySQL database"
  network_id  = yandex_vpc_network.network.id

  ingress {
    description    = "MySQL from VMs"
    protocol       = "TCP"
    port           = 3306
    v4_cidr_blocks = ["192.168.1.0/24"]
  }
}

# Создание кластера MySQL
resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name        = "mysql-cluster"
  environment = "PRODUCTION"
  network_id  = yandex_vpc_network.network.id
  version     = "8.0"
  
  security_group_ids = [yandex_vpc_security_group.mysql_sg.id]

  resources {
    resource_preset_id = "b1.medium" # 2 vCPU, 4 GB RAM
    disk_type_id       = "network-hdd"
    disk_size          = 20
  }

  host {
    zone      = var.yc_zone
    subnet_id = yandex_vpc_subnet.subnet.id
  }
}

# Создание базы данных
resource "yandex_mdb_mysql_database" "database" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appdb"
}

# Создание пользователя для базы данных
resource "yandex_mdb_mysql_user" "user" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "app_user"
  password   = var.mysql_password
  permission {
    database_name = yandex_mdb_mysql_database.database.name
    roles         = ["ALL"]
  }
}

# Вывод информации о созданных ресурсах
output "crm_server_public_ip" {
  value = yandex_compute_instance.crm.network_interface.0.nat_ip_address
}

output "ecommerce_server_public_ip" {
  value = yandex_compute_instance.ecommerce.network_interface.0.nat_ip_address
}

output "mysql_host" {
  value = yandex_mdb_mysql_cluster.mysql_cluster.host[0].fqdn
}

output "mysql_user" {
  value = yandex_mdb_mysql_user.user.name
}

output "mysql_database" {
  value = yandex_mdb_mysql_database.database.name
}
