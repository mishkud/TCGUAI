# Конфигурация провайдера Yandex Cloud
terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
      version = ">= 0.129.0"
    }
  }
}

provider "yandex" {
  # Необходимо указать следующие переменные в переменных окружения или файле credentials
  # service_account_key_file = "path/to/key.json" # Путь к файлу ключа сервисного аккаунта
  # или
  # token = "your_oauth_token" # OAuth токен
  cloud_id  = "your_cloud_id"   # ID облака
  folder_id = "your_folder_id"  # ID папки
  zone      = "ru-central1-a"   # Зона доступности
}

# Сеть и подсеть
resource "yandex_vpc_network" "network" {
  name = "app-network"
}

resource "yandex_vpc_subnet" "subnet" {
  name           = "app-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}

# Виртуальная машина для CRM
resource "yandex_compute_instance" "crm_vm" {
  name        = "crm-vm"
  platform_id = "standard-v3"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 4
    core_fraction = 100
  }

  boot_disk {
    initialize_params {
      image_id = "fd8e4s2e4v4b0qjf0q9p" # ID образа Ubuntu 22.04 LTS
      size     = 20
      type     = "network-ssd"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

# Виртуальная машина для интернет-магазина
resource "yandex_compute_instance" "shop_vm" {
  name        = "shop-vm"
  platform_id = "standard-v3"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 4
    core_fraction = 100
  }

  boot_disk {
    initialize_params {
      image_id = "fd8e4s2e4v4b0qjf0q9p" # ID обра$[S1]за Ubuntu 22.04 LTS
      size     = 20
      type     = "network-ssd"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

# Управляемый кластер MySQL
resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name        = "app-mysql"
  environment = "PRODUCTION"
  version     = "8.0"
  network_id  = yandex_vpc_network.network.id

  resources {
    resource_preset_id = "s2.micro" # 2 CPU, 8 GB RAM
    disk_size          = 20
    disk_type_id       = "network-ssd"
  }

  mysql_config = {
    sql_mode = "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
  }

  host {
    zone      = "ru-central1-a"
    subnet_id = yandex_vpc_subnet.subnet.id
  }

  database {
    name = "app_db"
  }

  user {
    name     = "app_user"
    password = "secure_password_123" # Рекомендуется заменить на безопасный пароль
    permission {
      database_name = "app_db"
      roles         = ["ALL"]
    }
  }
}

# Вывод внешних IP-адресов ВМ
output "crm_vm_external_ip" {
  value = yandex_compute_instance.crm_vm.network_interface.0.nat_ip_address
}

output "shop_vm_external_ip" {
  value = yandex_compute_instance.shop_vm.network_interface.0.nat_ip_address
}

# Вывод данных для подключения к MySQL
output "mysql_host" {
  value = yandex_mdb_mysql_cluster.mysql_cluster.host[0].fqdn
}

output "mysql_user" {
  value = "app_user"
}

output "mysql_password" {
  value     = "secure_password_123"
  sensitive = true
}

output "mysql_database" {
  value = "app_db"
}
