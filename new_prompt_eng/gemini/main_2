terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}

# main.tf

################################################################################
# Networking
################################################################################

resource "yandex_vpc_network" "default" {
  name = "prod-network"
}

resource "yandex_vpc_subnet" "default" {
  name           = "prod-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.default.id
  v4_cidr_blocks = ["10.1.0.0/24"]
}

################################################################################
# Security Groups
################################################################################

resource "yandex_vpc_security_group" "default" {
  name       = "default-sg"
  network_id = yandex_vpc_network.default.id

  ingress {
    protocol       = "TCP"
    description    = "Allow SSH access"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 22
  }

  egress {
    protocol       = "ANY"
    description    = "Allow all outgoing traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "yandex_vpc_security_group" "mysql_access" {
  name       = "mysql-access-sg"
  network_id = yandex_vpc_network.default.id

  ingress {
    protocol              = "TCP"
    description           = "Allow MySQL access from internal network"
    predefined_target     = "self_security_group"
    port                  = 3306
  }
}


################################################################################
# Virtual Machines
################################################################################

data "yandex_compute_image" "ubuntu" {
  family = "ubuntu-2204-lts"
}

# CRM Server
resource "yandex_compute_instance" "crm_server" {
  name        = "crm-server"
  platform_id = "standard-v2"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu.id
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.default.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.default.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

# E-commerce Store
resource "yandex_compute_instance" "ecommerce_store" {
  name        = "ecommerce-store"
  platform_id = "standard-v2"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu.id
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.default.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.default.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }
}

################################################################################
# Managed MySQL
################################################################################

resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name                = "prod-mysql-cluster"
  environment         = "PRODUCTION"
  network_id          = yandex_vpc_network.default.id
  version             = "8.0"
  security_group_ids  = [yandex_vpc_security_group.mysql_access.id]

  resources {
    resource_preset_id = "s2.medium" # 2 cores, 8GB RAM
    disk_type_id       = "network-ssd"
    disk_size          = 20
  }

  host {
    zone      = "ru-central1-a"
    subnet_id = yandex_vpc_subnet.default.id
  }

  database {
    name = "prod_db"
  }

  user {
    name     = "prod_user"
    password = "your_strong_password" # Replace with a secure password or use a secret manager
    permission {
      database_name = "prod_db"
      roles         = ["ALL"]
    }
  }
}


################################################################################
# Outputs
################################################################################

output "crm_server_public_ip" {
  value = yandex_compute_instance.crm_server.network_interface.0.nat_ip_address
}

output "ecommerce_store_public_ip" {
  value = yandex_compute_instance.ecommerce_store.network_interface.0.nat_ip_address
}

output "mysql_cluster_fqdn" {
  value = yandex_mdb_mysql_cluster.mysql_cluster.host[0].fqdn
}
