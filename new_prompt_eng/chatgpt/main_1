terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}

#################################
# MAIN.TF - YANDEX CLOUD INFRA
#################################

# Common network
resource "yandex_vpc_network" "main_net" {
  name = "main-network"
}

resource "yandex_vpc_subnet" "main_subnet" {
  name           = "main-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.main_net.id
  v4_cidr_blocks = ["10.0.0.0/24"]
}

# SSH key
locals {
  ssh_key = file("~/.ssh/id_rsa.pub")
}

# Security group
resource "yandex_vpc_security_group" "main_sg" {
  name        = "allow-ssh-mysql"
  network_id  = yandex_vpc_network.main_net.id

  ingress {
    protocol       = "TCP"
    port           = 22
    v4_cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol       = "TCP"
    port           = 3306
    security_group_id = yandex_vpc_security_group.main_sg.id
  }

  egress {
    protocol       = "ANY"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

##########################
# CRM VM
##########################
resource "yandex_compute_instance" "crm" {
  name        = "crm-server"
  zone        = "ru-central1-a"
  platform_id = "standard-v1"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8n9q8rh5d7ul03f2mg" # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.main_subnet.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.main_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${local.ssh_key}"
  }
}

##########################
# E-COMMERCE VM
##########################
resource "yandex_compute_instance" "ecommerce" {
  name        = "ecommerce-store"
  zone        = "ru-central1-a"
  platform_id = "standard-v1"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8n9q8rh5d7ul03f2mg" # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.main_subnet.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.main_sg.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${local.ssh_key}"
  }
}

##########################
# Managed MySQL
##########################
resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name        = "mysql-cluster"
  environment = "PRODUCTION"
  network_id  = yandex_vpc_network.main_net.id

  config {
    version = "8.0"

    resources {
      resource_preset_id = "s2.medium"
      disk_size          = 20
      disk_type_id       = "network-ssd"
    }

    backup_window_start {
      hours   = 3
      minutes = 0
    }
  }

  host {
    zone      = "ru-central1-a"
    subnet_id = yandex_vpc_subnet.main_subnet.id
    assign_public_ip = false
  }
}

resource "yandex_mdb_mysql_database" "app_db" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appdb"
}

resource "yandex_mdb_mysql_user" "app_user" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appuser"
  password   = "strong-password-123"

  permission {
    database_name = yandex_mdb_mysql_database.app_db.name
    roles         = ["ALL"]
  }
}

##########################
# Outputs
##########################
output "crm_public_ip" {
  value = yandex_compute_instance.crm.network_interface[0].nat_ip_address
}

output "ecommerce_public_ip" {
  value = yandex_compute_instance.ecommerce.network_interface[0].nat_ip_address
}

