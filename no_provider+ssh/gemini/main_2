terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}
locals {
  yc_zone         = "ru-central1-a" // Вы можете изменить на другую доступную зону
  ssh_public_key  = file("~/.ssh/id_rsa.pub") // Путь к вашему публичному SSH ключу
  vm_image_family = "ubuntu-2204-lts"         // Используем Ubuntu 22.04 LTS
  db_password     = "ChangeMePlease123!"      // ВНИМАНИЕ: Замените этот пароль!
}

data "yandex_compute_image" "ubuntu_image" {
  family = local.vm_image_family
}

resource "yandex_vpc_network" "app_network" {
  name = "app-network"
}

resource "yandex_vpc_subnet" "app_subnet" {
  name           = "app-subnet"
  zone           = local.yc_zone
  network_id     = yandex_vpc_network.app_network.id
  v4_cidr_blocks = ["10.1.0.0/24"]
}

resource "yandex_compute_instance" "crm_vm" {
  name        = "crm-vm"
  platform_id = "standard-v2" // Стандартная платформа
  zone        = local.yc_zone

  resources {
    cores  = 2
    memory = 2 # GB
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu_image.id
      size     = 15 # GB
      type     = "network-ssd"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.app_subnet.id
    nat       = true // Для получения публичного IP-адреса
  }

  metadata = {
    ssh-keys = "ubuntu:${local.ssh_public_key}" // 'ubuntu' - стандартный пользователь для Ubuntu образов
  }
}

resource "yandex_compute_instance" "store_vm" {
  name        = "store-vm"
  platform_id = "standard-v2"
  zone        = local.yc_zone

  resources {
    cores  = 2
    memory = 2 # GB
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu_image.id
      size     = 15 # GB
      type     = "network-ssd"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.app_subnet.id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${local.ssh_public_key}"
  }
}

resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name                = "main-mysql-cluster"
  environment         = "PRESTABLE" // Для разработки/тестирования; используйте "PRODUCTION" для боевой среды
  network_id          = yandex_vpc_network.app_network.id
  version             = "8.0"       // Версия MySQL
  deletion_protection = false       // Установите true для защиты от случайного удаления в PRODUCTION

  resources {
    resource_preset_id = "s2.micro" // 2 vCPU, 2 GB RAM
    disk_type_id       = "network-ssd"
    disk_size          = 10 # GB
  }

  host {
    zone      = local.yc_zone
    subnet_id = yandex_vpc_subnet.app_subnet.id
    name      = "mysql-host1"
  }

  maintenance_window {
    type = "ANYTIME" # Или укажите конкретное время, например, "WEEKLY" и day/hour
  }
}

resource "yandex_mdb_database" "app_db" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appdb"
}

resource "yandex_mdb_user" "app_user" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appuser"
  password   = local.db_password

  permission {
    database_name = yandex_mdb_database.app_db.name
    roles         = ["ALL"] # Предоставляет все права на указанную базу данных
  }
}

output "crm_vm_external_ip" {
  description = "Внешний IP-адрес виртуальной машины CRM"
  value       = yandex_compute_instance.crm_vm.network_interface.0.nat_ip_address
}

output "store_vm_external_ip" {
  description = "Внешний IP-адрес виртуальной машины интернет-магазина"
  value       = yandex_compute_instance.store_vm.network_interface.0.nat_ip_address
}

output "mysql_cluster_fqdn" {
  description = "FQDN хоста MySQL кластера (используйте для подключения)"
  value       = yandex_mdb_mysql_cluster.mysql_cluster.host[0].fqdn
}

output "mysql_database_name" {
  description = "Имя базы данных MySQL"
  value       = yandex_mdb_database.app_db.name
}

output "mysql_user_name" {
  description = "Имя пользователя базы данных MySQL"
  value       = yandex_mdb_user.app_user.name
}

output "mysql_user_password" {
  description = "Пароль пользователя базы данных MySQL. ВНИМАНИЕ: Это небезопасно для производственной среды. Смените пароль после создания!"
  value       = local.db_password
  sensitive   = true // Помечает вывод как чувствительный
}
