terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}
variable "zone" {
  default = "ru-central1-a"
}

variable "network_name" {
  default = "default"
}

# Чтение публичного SSH-ключа пользователя
data "local_file" "ssh_key" {
  filename = "${pathexpand("~/.ssh/id_rsa.pub")}"
}

# Получение ID сети
data "yandex_vpc_network" "default" {
  name = var.network_name
}

# Получение ID подсети в заданной зоне
data "yandex_vpc_subnet" "default" {
  for_each = toset([var.zone])
  network_id = data.yandex_vpc_network.default.id
  zone       = each.key
}

# ВМ для CRM
resource "yandex_compute_instance" "crm" {
  name        = "crm-instance"
  zone        = var.zone
  platform_id = "standard-v1"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8n19r5b1rh3rksntf0" # Ubuntu 22.04 LTS
    }
  }

  network_interface {
    subnet_id = data.yandex_vpc_subnet.default[var.zone].id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${data.local_file.ssh_key.content}"
  }
}

# ВМ для интернет-магазина
resource "yandex_compute_instance" "shop" {
  name        = "shop-instance"
  zone        = var.zone
  platform_id = "standard-v1"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8n19r5b1rh3rksntf0" # Ubuntu 22.04 LTS
    }
  }

  network_interface {
    subnet_id = data.yandex_vpc_subnet.default[var.zone].id
    nat       = true
  }

  metadata = {
    ssh-keys = "ubuntu:${data.local_file.ssh_key.content}"
  }
}

# Управляемая MySQL база данных
resource "yandex_mdb_mysql_cluster" "mysql_cluster" {
  name        = "mysql-cluster"
  environment = "PRESTABLE"
  network_id  = data.yandex_vpc_network.default.id

  config {
    version = "8.0"
    resources {
      resource_preset_id = "s2.micro"
      disk_size          = 10
      disk_type_id       = "network-ssd"
    }
  }

  host {
    zone      = var.zone
    subnet_id = data.yandex_vpc_subnet.default[var.zone].id
  }
}

resource "yandex_mdb_mysql_database" "db" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appdb"
}

resource "yandex_mdb_mysql_user" "user" {
  cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id
  name       = "appuser"
  password   = "StrongPassw0rd!" # Обязательно заменить после initial apply
  permission {
    database_name = yandex_mdb_mysql_database.db.name
    roles         = ["ALL"]
  }
}

