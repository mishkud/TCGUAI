terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}
# Получение SSH-ключа пользователя
locals {
  ssh_key = file("~/.ssh/id_rsa.pub")
}

# Создание сети
resource "yandex_vpc_network" "main" {
  name = "main-network"
}

# Создание подсети
resource "yandex_vpc_subnet" "main" {
  name           = "main-subnet"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.main.id
  v4_cidr_blocks = ["10.0.1.0/24"]
}

# Создание группы безопасности
resource "yandex_vpc_security_group" "main" {
  name        = "main-security-group"
  network_id  = yandex_vpc_network.main.id

  egress {
    protocol       = "ANY"
    description    = "All outbound traffic"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol       = "TCP"
    description    = "SSH"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 22
  }

  ingress {
    protocol       = "TCP"
    description    = "HTTP"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 80
  }

  ingress {
    protocol       = "TCP"
    description    = "HTTPS"
    v4_cidr_blocks = ["0.0.0.0/0"]
    port           = 443
  }

  ingress {
    protocol       = "TCP"
    description    = "Internal communication"
    v4_cidr_blocks = ["10.0.1.0/24"]
    from_port      = 3000
    to_port        = 9000
  }
}

# Виртуальная машина для CRM
resource "yandex_compute_instance" "crm_server" {
  name        = "crm-server"
  platform_id = "standard-v2"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = "fd8kdq6d0p8sij7h5qe3"  # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.main.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.main.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${local.ssh_key}"
    user-data = "#cloud-config\npackages:\n  - nginx\n  - curl\n  - wget\n  - htop"
  }

  scheduling_policy {
    preemptible = true
  }
}

# Виртуальная машина для интернет-магазина
resource "yandex_compute_instance" "shop_server" {
  name        = "shop-server"
  platform_id = "standard-v2"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = "fd8kdq6d0p8sij7h5qe3"  # Ubuntu 22.04 LTS
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.main.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.main.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${local.ssh_key}"
    user-data = "#cloud-config\npackages:\n  - nginx\n  - curl\n  - wget\n  - htop"
  }

  scheduling_policy {
    preemptible = true
  }
}

# Managed база данных MySQL
resource "yandex_mdb_mysql_cluster" "main" {
  name        = "mysql-cluster"
  environment = "PRODUCTION"
  network_id  = yandex_vpc_network.main.id
  version     = "8.0"

  resources {
    resource_preset_id = "s2.micro"
    disk_type_id       = "network-ssd"
    disk_size          = 20
  }

  host {
    zone      = "ru-central1-a"
    subnet_id = yandex_vpc_subnet.main.id
  }

  database {
    name = "app_db"
  }

  user {
    name     = "app_user"
    password = "SecurePassword123!"
    permission {
      database_name = "app_db"
      roles         = ["ALL"]
    }
  }
}

# Outputs для получения информации о созданных ресурсах
output "crm_server_ip" {
  description = "External IP address of CRM server"
  value       = yandex_compute_instance.crm_server.network_interface.0.nat_ip_address
}

output "shop_server_ip" {
  description = "External IP address of Shop server"
  value       = yandex_compute_instance.shop_server.network_interface.0.nat_ip_address
}

output "mysql_cluster_fqdn" {
  description = "FQDN of MySQL cluster"
  value       = yandex_mdb_mysql_cluster.main.host.0.fqdn
}

output "mysql_connection_info" {
  description = "MySQL connection information"
  value = {
    host     = yandex_mdb_mysql_cluster.main.host.0.fqdn
    port     = 3306
    database = "app_db"
    username = "app_user"
  }
  sensitive = false
}

output "ssh_connection_commands" {
  description = "SSH connection commands"
  value = {
    crm_server  = "ssh ubuntu@${yandex_compute_instance.crm_server.network_interface.0.nat_ip_address}"
    shop_server = "ssh ubuntu@${yandex_compute_instance.shop_server.network_interface.0.nat_ip_address}"
  }
}
