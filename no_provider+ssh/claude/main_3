terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}
# Получение зон доступности
data "yandex_compute_zones" "available" {}

# Получение образа Ubuntu
data "yandex_compute_image" "ubuntu" {
  family = "ubuntu-2004-lts"
}

# Создание сети
resource "yandex_vpc_network" "main" {
  name        = "main-network"
  description = "Main network for CRM and e-commerce infrastructure"
}

# Создание подсети
resource "yandex_vpc_subnet" "main" {
  name           = "main-subnet"
  zone           = data.yandex_compute_zones.available.names[0]
  network_id     = yandex_vpc_network.main.id
  v4_cidr_blocks = ["10.0.1.0/24"]
}

# Группа безопасности для веб-серверов
resource "yandex_vpc_security_group" "web" {
  name       = "web-security-group"
  network_id = yandex_vpc_network.main.id

  ingress {
    protocol       = "TCP"
    port           = 22
    v4_cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol       = "TCP"
    port           = 80
    v4_cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    protocol       = "TCP"
    port           = 443
    v4_cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    protocol       = "ANY"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

# Группа безопасности для базы данных
resource "yandex_vpc_security_group" "db" {
  name       = "db-security-group"
  network_id = yandex_vpc_network.main.id

  ingress {
    protocol       = "TCP"
    port           = 3306
    v4_cidr_blocks = ["10.0.1.0/24"]
  }

  egress {
    protocol       = "ANY"
    v4_cidr_blocks = ["0.0.0.0/0"]
  }
}

# Виртуальная машина для CRM
resource "yandex_compute_instance" "crm" {
  name        = "crm-server"
  platform_id = "standard-v2"
  zone        = data.yandex_compute_zones.available.names[0]

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu.id
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.main.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.web.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
    user-data = <<-EOF
      #cloud-config
      package_update: true
      package_upgrade: true
      packages:
        - nginx
        - mysql-client
        - curl
        - wget
      runcmd:
        - systemctl enable nginx
        - systemctl start nginx
        - echo "<h1>CRM Server Ready</h1>" > /var/www/html/index.html
    EOF
  }
}

# Виртуальная машина для интернет-магазина
resource "yandex_compute_instance" "ecommerce" {
  name        = "ecommerce-server"
  platform_id = "standard-v2"
  zone        = data.yandex_compute_zones.available.names[0]

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = data.yandex_compute_image.ubuntu.id
      size     = 20
    }
  }

  network_interface {
    subnet_id          = yandex_vpc_subnet.main.id
    nat                = true
    security_group_ids = [yandex_vpc_security_group.web.id]
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
    user-data = <<-EOF
      #cloud-config
      package_update: true
      package_upgrade: true
      packages:
        - nginx
        - mysql-client
        - php-fpm
        - php-mysql
        - curl
        - wget
      runcmd:
        - systemctl enable nginx
        - systemctl start nginx
        - systemctl enable php7.4-fpm
        - systemctl start php7.4-fpm
        - echo "<h1>E-commerce Server Ready</h1>" > /var/www/html/index.html
    EOF
  }
}

# Managed MySQL база данных
resource "yandex_mdb_mysql_cluster" "main" {
  name        = "main-mysql-cluster"
  environment = "PRESTABLE"
  network_id  = yandex_vpc_network.main.id
  version     = "8.0"

  resources {
    resource_preset_id = "s2.micro"
    disk_type_id       = "network-ssd"
    disk_size          = 20
  }

  mysql_config = {
    sql_mode                      = "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
    max_connections               = 100
    default_authentication_plugin = "mysql_native_password"
  }

  database {
    name = "crm_db"
  }

  database {
    name = "ecommerce_db"
  }

  user {
    name     = "crm_user"
    password = "CrmUser123!"
    permission {
      database_name = "crm_db"
      roles         = ["ALL"]
    }
  }

  user {
    name     = "ecommerce_user"
    password = "EcomUser123!"
    permission {
      database_name = "ecommerce_db"
      roles         = ["ALL"]
    }
  }

  host {
    zone      = data.yandex_compute_zones.available.names[0]
    subnet_id = yandex_vpc_subnet.main.id
  }

  security_group_ids = [yandex_vpc_security_group.db.id]
}

# Outputs для получения информации о созданных ресурсах
output "crm_server_external_ip" {
  description = "External IP address of CRM server"
  value       = yandex_compute_instance.crm.network_interface.0.nat_ip_address
}

output "ecommerce_server_external_ip" {
  description = "External IP address of E-commerce server"
  value       = yandex_compute_instance.ecommerce.network_interface.0.nat_ip_address
}

output "mysql_cluster_fqdn" {
  description = "FQDN of MySQL cluster"
  value       = yandex_mdb_mysql_cluster.main.host.0.fqdn
}

output "connection_info" {
  description = "Connection information"
  value = {
    crm_ssh         = "ssh ubuntu@${yandex_compute_instance.crm.network_interface.0.nat_ip_address}"
    ecommerce_ssh   = "ssh ubuntu@${yandex_compute_instance.ecommerce.network_interface.0.nat_ip_address}"
    mysql_host      = yandex_mdb_mysql_cluster.main.host.0.fqdn
    crm_db_user     = "crm_user"
    ecommerce_db_user = "ecommerce_user"
  }
  sensitive = true
}
