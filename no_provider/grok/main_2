terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}

Переменные

variable "zone" { description = "Зона доступности Yandex Cloud" type = string default = "ru-central1-a" }

variable "subnet_id" { description = "ID подсети для размещения ресурсов" type = string }

variable "service_account_id" { description = "ID сервисного аккаунта с правами на создание ресурсов" type = string }

Виртуальная машина для CRM

resource "yandex_compute_instance" "crm_vm" { name = "crm-vm" zone = var.zone platform_id = "standard-v3"

resources { cores = 2 memory = 2 core_fraction = 20 }

boot_disk { initialize_params { image_id = "fd8kdq6djo1b0ck1a3vc" # Ubuntu 22.04 LTS size = 10 } }

network_interface { subnet_id = var.subnet_id nat = true }

metadata = { ssh-keys = "ubuntu:ssh-rsa YOUR_SSH_PUBLIC_KEY" # Замените YOUR_SSH_PUBLIC_KEY на ваш публичный SSH-ключ }

service_account_id = var.service_account_id }

Виртуальная машина для интернет-магазина

resource "yandex_compute_instance" "shop_vm" { name = "shop-vm" zone = var.zone platform_id = "standard-v3"

resources { cores = 2 memory = 2 core_fraction = 20 }

boot_disk { initialize_params { image_id = "fd8kdq6djo1b0ck1a3vc" # Ubuntu 22.04 LTS size = 10 } }

network_interface { subnet_id = var.subnet_id nat = true }

metadata = { ssh-keys = "ubuntu:ssh-rsa YOUR_SSH_PUBLIC_KEY" # Замените YOUR_SSH_PUBLIC_KEY на ваш публичный SSH-ключ }

service_account_id = var.service_account_id }

Managed MySQL база данных

resource "yandex_mdb_mysql_cluster" "mysql_cluster" { name = "mysql-cluster" environment = "PRODUCTION" network_id = data.yandex_vpc_subnet.subnet.network_id version = "8.0" zone = var.zone

resources { resource_preset_id = "s2.micro" # 1 vCPU, 1 ГБ RAM disk_size = 10 disk_type_id = "network-ssd" }

mysql_config = { sql_mode = "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION" }

host { zone = var.zone subnet_id = var.subnet_id }

access { web_sql = true data_lens = false }

maintenance_window { type = "ANYTIME" } }

Получение данных о подсети для определения network_id

data "yandex_vpc_subnet" "subnet" { subnet_id = var.subnet_id }

Создание базы данных в MySQL кластере

resource "yandex_mdb_mysql_database" "mysql_db" { cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id name = "app_db" }

Создание пользователя MySQL

resource "yandex_mdb_mysql_user" "mysql_user" { cluster_id = yandex_mdb_mysql_cluster.mysql_cluster.id name = "app_user" password = "SecurePassword123!" # Замените на безопасный пароль permission { database_name = yandex_mdb_mysql_database.mysql_db.name roles = ["ALL"] } }

Вывод информации для подключения

output "crm_vm_ip" { description = "Внешний IP-адрес ВМ для CRM" value = yandex_compute_instance.crm_vm.network_interface.0.nat_ip_address }

output "shop_vm_ip" { description = "Внешний IP-адрес ВМ для интернет-магазина" value = yandex_compute_instance.shop_vm.network_interface.0.nat_ip_address }

output "mysql_host" { description = "Хост MySQL кластера" value = yandex_mdb_mysql_cluster.mysql_cluster.host.0.fqdn }

output "mysql_user" { description = "Имя пользователя MySQL" value = yandex_mdb_mysql_user.mysql_user.name }

output "mysql_database" { description = "Имя базы данных MySQL" value = yandex_mdb_mysql_database.mysql_db.name }
