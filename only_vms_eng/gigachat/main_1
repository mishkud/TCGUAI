terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  zone = "<зона_доступности_по_умолчанию>"
}
# Variables block
variable "ssh_public_key_path" {
  type = string
  description = "Path to your SSH public key."
}

# Resource definitions

resource "yandex_vpc_network" "network" {
  name = "common-network"
}

resource "yandex_vpc_subnet" "subnet" {
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network.id
  v4_cidr_blocks = ["10.130.0.0/24"]
  name           = "common-subnet"
}

resource "yandex_compute_instance" "crm_server" {
  name        = "crm-server"
  platform_id = "standard-v3"
  resources {
    cores  = 2
    memory = 2
  }
  boot_disk {
    initialize_params {
      image_id = "fd8bqtho7lsoen5m9ktj" # Ubuntu 22.04 LTS
      size     = 20
    }
  }
  network_interface {
    subnet_id       = yandex_vpc_subnet.subnet.id
    nat             = true
    security_group_ids = [
      yandex_vpc_security_group.ssh-access.id,
    ]
  }
  metadata = {
    ssh-keys = data.yandex_compute_image.image.metadata["ssh-keys"] + "\n${file(var.ssh_public_key_path)}"
  }
}

resource "yandex_compute_instance" "ecommerce_store" {
  name        = "ecommerce-store"
  platform_id = "standard-v3"
  resources {
    cores  = 2
    memory = 2
  }
  boot_disk {
    initialize_params {
      image_id = "fd8bqtho7lsoen5m9ktj" # Ubuntu 22.04 LTS
      size     = 20
    }
  }
  network_interface {
    subnet_id       = yandex_vpc_subnet.subnet.id
    nat             = true
    security_group_ids = [
      yandex_vpc_security_group.ssh-access.id,
    ]
  }
  metadata = {
    ssh-keys = data.yandex_compute_image.image.metadata["ssh-keys"] + "\n${file(var.ssh_public_key_path)}"
  }
}

data "yandex_compute_image" "image" {
  family = "ubuntu-2204-lts"
}

resource "yandex_vpc_security_group" "ssh-access" {
  name = "allow-ssh-only"
  ingress {
    protocol    = "TCP"
    port_min    = 22
    port_max    = 22
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    protocol    = "ALL"
    port_min    = 0
    port_max    = 65535
    cidr_blocks = ["0.0.0.0/0"]
  }
}

output "crm_server_ip" {
  value = yandex_compute_instance.crm_server.network_interface.0.nat_ip_address
}

output "ecommerce_store_ip" {
  value = yandex_compute_instance.ecommerce_store.network_interface.0.nat_ip_address
}
